//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
namespace JetBrains.ReSharper.Psi.FSharp {
  public partial interface IQualifiedIdReferenceNode : JetBrains.ReSharper.Psi.FSharp.IValueReferenceExpressionOldNode,JetBrains.ReSharper.Psi.FSharp.IQualifiedIdReference {
    JetBrains.ReSharper.Psi.Tree.TreeNodeCollection<JetBrains.ReSharper.Psi.ITokenNode> Dot { get; }
    JetBrains.ReSharper.Psi.Tree.TreeNodeCollection<JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode> ReferencesNode { get; }
    JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode AddReferencesNodeBefore (JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode param, JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode anchor);
    JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode AddReferencesNodeAfter (JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode param, JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode anchor);
    void RemoveReferencesNode (JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode param);
  }
}
