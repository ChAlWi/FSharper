//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
namespace JetBrains.ReSharper.Psi.FSharp {
  public partial interface IPatternMatchingNode : JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpTreeNode,JetBrains.ReSharper.Psi.FSharp.IPatternMatching {
    JetBrains.ReSharper.Psi.Tree.TreeNodeCollection<JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode> ClausesNode { get; }
    JetBrains.ReSharper.Psi.Tree.TreeNodeCollection<JetBrains.ReSharper.Psi.ITokenNode> Or { get; }
    JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode AddClausesNodeBefore (JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode param, JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode anchor);
    JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode AddClausesNodeAfter (JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode param, JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode anchor);
    void RemoveClausesNode (JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode param);
  }
}
