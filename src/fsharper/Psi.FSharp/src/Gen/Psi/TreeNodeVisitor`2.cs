//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.Psi.FSharp {
  public abstract partial class TreeNodeVisitor<TContext, TReturn> {
    public virtual TReturn VisitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.Tree.ITreeNode node, TContext context) {
      return default(TReturn);
    }
    public virtual TReturn VisitFSharpFileNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpFileNode FSharpFileParam, TContext context) {
      return VisitNode (FSharpFileParam, context);
    }
    public virtual TReturn VisitAlgebraicTypeRepresentationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAlgebraicTypeRepresentationNode algebraicTypeRepresentationParam, TContext context) {
      return VisitTypeRepresentationNode (algebraicTypeRepresentationParam, context);
    }
    public virtual TReturn VisitAndExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAndExpressionNode andExpressionParam, TContext context) {
      return VisitNode (andExpressionParam, context);
    }
    public virtual TReturn VisitApplicationExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IApplicationExpressionNode applicationExpressionParam, TContext context) {
      return VisitExpressionNode (applicationExpressionParam, context);
    }
    public virtual TReturn VisitArrayExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IArrayExpressionNode arrayExpressionParam, TContext context) {
      return VisitExpressionNode (arrayExpressionParam, context);
    }
    public virtual TReturn VisitArrayPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IArrayPatternNode arrayPatternParam, TContext context) {
      return VisitPatternNode (arrayPatternParam, context);
    }
    public virtual TReturn VisitArrayTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IArrayTypeNode arrayTypeParam, TContext context) {
      return VisitTypeExpressionNode (arrayTypeParam, context);
    }
    public virtual TReturn VisitAsValuePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IAsValuePatternNode asValuePatternParam, TContext context) {
      return VisitPatternNode (asValuePatternParam, context);
    }
    public virtual TReturn VisitAssertExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAssertExpressionNode assertExpressionParam, TContext context) {
      return VisitExpressionNode (assertExpressionParam, context);
    }
    public virtual TReturn VisitAssignExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAssignExpressionNode assignExpressionParam, TContext context) {
      return VisitNode (assignExpressionParam, context);
    }
    public virtual TReturn VisitAssignFieldExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAssignFieldExpressionNode assignFieldExpressionParam, TContext context) {
      return VisitNode (assignFieldExpressionParam, context);
    }
    public virtual TReturn VisitAttributeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAttributeNode attributeParam, TContext context) {
      return VisitNode (attributeParam, context);
    }
    public virtual TReturn VisitAttributeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAttributeReferenceNode attributeReferenceParam, TContext context) {
      return VisitNode (attributeReferenceParam, context);
    }
    public virtual TReturn VisitBinaryAddExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryAddExpressionNode binaryAddExpressionParam, TContext context) {
      return VisitNode (binaryAddExpressionParam, context);
    }
    public virtual TReturn VisitBinaryExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryExpressionNode binaryExpressionParam, TContext context) {
      return VisitOperatorExpressionNode (binaryExpressionParam, context);
    }
    public virtual TReturn VisitBinaryMultExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryMultExpressionNode binaryMultExpressionParam, TContext context) {
      return VisitNode (binaryMultExpressionParam, context);
    }
    public virtual TReturn VisitBinaryPowerExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryPowerExpressionNode binaryPowerExpressionParam, TContext context) {
      return VisitNode (binaryPowerExpressionParam, context);
    }
    public virtual TReturn VisitBindingNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IBindingNode bindingParam, TContext context) {
      return VisitBindingSchemeNode (bindingParam, context);
    }
    public virtual TReturn VisitBindingPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBindingPatternNode bindingPatternParam, TContext context) {
      return VisitBindingSourceNode (bindingPatternParam, context);
    }
    public virtual TReturn VisitBindingSchemeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBindingSchemeNode bindingSchemeParam, TContext context) {
      return VisitNode (bindingSchemeParam, context);
    }
    public virtual TReturn VisitBindingSourceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IBindingSourceNode bindingSourceParam, TContext context) {
      return VisitNode (bindingSourceParam, context);
    }
    public virtual TReturn VisitBindingValueNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IBindingValueNode bindingValueParam, TContext context) {
      return VisitBindingValueSchemeNode (bindingValueParam, context);
    }
    public virtual TReturn VisitBindingValueSchemeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBindingValueSchemeNode bindingValueSchemeParam, TContext context) {
      return VisitBindingSourceNode (bindingValueSchemeParam, context);
    }
    public virtual TReturn VisitBracketedExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBracketedExpressionNode bracketedExpressionParam, TContext context) {
      return VisitExpressionNode (bracketedExpressionParam, context);
    }
    public virtual TReturn VisitBracketedFieldValueExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBracketedFieldValueExpressionNode bracketedFieldValueExpressionParam, TContext context) {
      return VisitExpressionNode (bracketedFieldValueExpressionParam, context);
    }
    public virtual TReturn VisitBracketedPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBracketedPatternNode bracketedPatternParam, TContext context) {
      return VisitPatternNode (bracketedPatternParam, context);
    }
    public virtual TReturn VisitComparisonExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IComparisonExpressionNode comparisonExpressionParam, TContext context) {
      return VisitNode (comparisonExpressionParam, context);
    }
    public virtual TReturn VisitConstantExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstantExpressionNode constantExpressionParam, TContext context) {
      return VisitExpressionNode (constantExpressionParam, context);
    }
    public virtual TReturn VisitConstantPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstantPatternNode constantPatternParam, TContext context) {
      return VisitPatternNode (constantPatternParam, context);
    }
    public virtual TReturn VisitConstructorDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstructorDeclarationNode constructorDeclarationParam, TContext context) {
      return VisitNode (constructorDeclarationParam, context);
    }
    public virtual TReturn VisitConstructorReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstructorReferenceNode constructorReferenceParam, TContext context) {
      return VisitPatternNode (constructorReferenceParam, context);
    }
    public virtual TReturn VisitCreationExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ICreationExpressionNode creationExpressionParam, TContext context) {
      return VisitExpressionNode (creationExpressionParam, context);
    }
    public virtual TReturn VisitCreationWithOverridingMethodsExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ICreationWithOverridingMethodsExpressionNode creationWithOverridingMethodsExpressionParam, TContext context) {
      return VisitExpressionNode (creationWithOverridingMethodsExpressionParam, context);
    }
    public virtual TReturn VisitDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IDefinitionNode definitionParam, TContext context) {
      return VisitNode (definitionParam, context);
    }
    public virtual TReturn VisitDisjunctionPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDisjunctionPatternNode disjunctionPatternParam, TContext context) {
      return VisitPatternNode (disjunctionPatternParam, context);
    }
    public virtual TReturn VisitDoExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDoExpressionNode doExpressionParam, TContext context) {
      return VisitBindingSchemeNode (doExpressionParam, context);
    }
    public virtual TReturn VisitDoExpressionDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IDoExpressionDefinitionNode doExpressionDefinitionParam, TContext context) {
      return VisitDefinitionNode (doExpressionDefinitionParam, context);
    }
    public virtual TReturn VisitDowncastExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDowncastExpressionNode downcastExpressionParam, TContext context) {
      return VisitExpressionNode (downcastExpressionParam, context);
    }
    public virtual TReturn VisitDowncastExpressionToTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDowncastExpressionToTypeNode downcastExpressionToTypeParam, TContext context) {
      return VisitExpressionNode (downcastExpressionToTypeParam, context);
    }
    public virtual TReturn VisitEmptyArrayNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IEmptyArrayNode emptyArrayParam, TContext context) {
      return VisitNode (emptyArrayParam, context);
    }
    public virtual TReturn VisitEmptyListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IEmptyListNode emptyListParam, TContext context) {
      return VisitNode (emptyListParam, context);
    }
    public virtual TReturn VisitExceptionAliasNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionAliasNode exceptionAliasParam, TContext context) {
      return VisitExceptionDefinitionNode (exceptionAliasParam, context);
    }
    public virtual TReturn VisitExceptionDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionDeclarationNode exceptionDeclarationParam, TContext context) {
      return VisitExceptionDefinitionNode (exceptionDeclarationParam, context);
    }
    public virtual TReturn VisitExceptionDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionDefinitionNode exceptionDefinitionParam, TContext context) {
      return VisitNode (exceptionDefinitionParam, context);
    }
    public virtual TReturn VisitExceptionReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionReferenceNode exceptionReferenceParam, TContext context) {
      return VisitNode (exceptionReferenceParam, context);
    }
    public virtual TReturn VisitExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExpressionNode expressionParam, TContext context) {
      return VisitNode (expressionParam, context);
    }
    public virtual TReturn VisitExpressionBlockNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IExpressionBlockNode expressionBlockParam, TContext context) {
      return VisitExpressionNode (expressionBlockParam, context);
    }
    public virtual TReturn VisitExpressionSequenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IExpressionSequenceNode expressionSequenceParam, TContext context) {
      return VisitExpressionNode (expressionSequenceParam, context);
    }
    public virtual TReturn VisitFieldAssignmentNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldAssignmentNode fieldAssignmentParam, TContext context) {
      return VisitNode (fieldAssignmentParam, context);
    }
    public virtual TReturn VisitFieldAssignmentListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldAssignmentListNode fieldAssignmentListParam, TContext context) {
      return VisitNode (fieldAssignmentListParam, context);
    }
    public virtual TReturn VisitFieldDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFieldDeclarationNode fieldDeclarationParam, TContext context) {
      return VisitNode (fieldDeclarationParam, context);
    }
    public virtual TReturn VisitFieldDeclarationListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldDeclarationListNode fieldDeclarationListParam, TContext context) {
      return VisitNode (fieldDeclarationListParam, context);
    }
    public virtual TReturn VisitFieldPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldPatternNode fieldPatternParam, TContext context) {
      return VisitNode (fieldPatternParam, context);
    }
    public virtual TReturn VisitFieldPatternListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldPatternListNode fieldPatternListParam, TContext context) {
      return VisitNode (fieldPatternListParam, context);
    }
    public virtual TReturn VisitFieldReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFieldReferenceNode fieldReferenceParam, TContext context) {
      return VisitNode (fieldReferenceParam, context);
    }
    public virtual TReturn VisitForAllTypeExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IForAllTypeExpressionNode forAllTypeExpressionParam, TContext context) {
      return VisitTypeSchemeExpressionNode (forAllTypeExpressionParam, context);
    }
    public virtual TReturn VisitForStatementExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IForStatementExpressionNode forStatementExpressionParam, TContext context) {
      return VisitExpressionNode (forStatementExpressionParam, context);
    }
    public virtual TReturn VisitFunExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFunExpressionNode funExpressionParam, TContext context) {
      return VisitExpressionNode (funExpressionParam, context);
    }
    public virtual TReturn VisitFunctionExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFunctionExpressionNode functionExpressionParam, TContext context) {
      return VisitExpressionNode (functionExpressionParam, context);
    }
    public virtual TReturn VisitFunctionTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFunctionTypeNode functionTypeParam, TContext context) {
      return VisitTypeExpressionNode (functionTypeParam, context);
    }
    public virtual TReturn VisitIdReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode idReferenceParam, TContext context) {
      return VisitNode (idReferenceParam, context);
    }
    public virtual TReturn VisitIfStatementExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IIfStatementExpressionNode ifStatementExpressionParam, TContext context) {
      return VisitExpressionNode (ifStatementExpressionParam, context);
    }
    public virtual TReturn VisitImplementationUnitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode implementationUnitParam, TContext context) {
      return VisitNode (implementationUnitParam, context);
    }
    public virtual TReturn VisitInfixOperatorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IInfixOperatorExpressionNode infixOperatorExpressionParam, TContext context) {
      return VisitNode (infixOperatorExpressionParam, context);
    }
    public virtual TReturn VisitInterfaceUnitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IInterfaceUnitNode interfaceUnitParam, TContext context) {
      return VisitNode (interfaceUnitParam, context);
    }
    public virtual TReturn VisitLazyExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ILazyExpressionNode lazyExpressionParam, TContext context) {
      return VisitExpressionNode (lazyExpressionParam, context);
    }
    public virtual TReturn VisitLazyTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ILazyTypeNode lazyTypeParam, TContext context) {
      return VisitTypeExpressionNode (lazyTypeParam, context);
    }
    public virtual TReturn VisitLetDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ILetDefinitionNode letDefinitionParam, TContext context) {
      return VisitDefinitionNode (letDefinitionParam, context);
    }
    public virtual TReturn VisitListConcatenateExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IListConcatenateExpressionNode listConcatenateExpressionParam, TContext context) {
      return VisitNode (listConcatenateExpressionParam, context);
    }
    public virtual TReturn VisitListConstructorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IListConstructorExpressionNode listConstructorExpressionParam, TContext context) {
      return VisitNode (listConstructorExpressionParam, context);
    }
    public virtual TReturn VisitListConstructorPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IListConstructorPatternNode listConstructorPatternParam, TContext context) {
      return VisitPatternNode (listConstructorPatternParam, context);
    }
    public virtual TReturn VisitLocalDeclarationsInExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ILocalDeclarationsInExpressionNode localDeclarationsInExpressionParam, TContext context) {
      return VisitExpressionNode (localDeclarationsInExpressionParam, context);
    }
    public virtual TReturn VisitMatchClauseNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode matchClauseParam, TContext context) {
      return VisitNode (matchClauseParam, context);
    }
    public virtual TReturn VisitMatchExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IMatchExpressionNode matchExpressionParam, TContext context) {
      return VisitExpressionNode (matchExpressionParam, context);
    }
    public virtual TReturn VisitMemberAccessExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMemberAccessExpressionNode memberAccessExpressionParam, TContext context) {
      return VisitExpressionNode (memberAccessExpressionParam, context);
    }
    public virtual TReturn VisitModuleReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IModuleReferenceNode moduleReferenceParam, TContext context) {
      return VisitNode (moduleReferenceParam, context);
    }
    public virtual TReturn VisitModuleReferenceListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IModuleReferenceListNode moduleReferenceListParam, TContext context) {
      return VisitNode (moduleReferenceListParam, context);
    }
    public virtual TReturn VisitModuleReferenceOldNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IModuleReferenceOldNode moduleReferenceOldParam, TContext context) {
      return VisitNode (moduleReferenceOldParam, context);
    }
    public virtual TReturn VisitMultiParameterTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMultiParameterTypeReferenceNode multiParameterTypeReferenceParam, TContext context) {
      return VisitNode (multiParameterTypeReferenceParam, context);
    }
    public virtual TReturn VisitMultipleMatchingNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMultipleMatchingNode multipleMatchingParam, TContext context) {
      return VisitNode (multipleMatchingParam, context);
    }
    public virtual TReturn VisitMutableBindingValueNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMutableBindingValueNode mutableBindingValueParam, TContext context) {
      return VisitBindingValueSchemeNode (mutableBindingValueParam, context);
    }
    public virtual TReturn VisitOneParameterTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOneParameterTypeReferenceNode oneParameterTypeReferenceParam, TContext context) {
      return VisitNode (oneParameterTypeReferenceParam, context);
    }
    public virtual TReturn VisitOpenModuleDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOpenModuleDefinitionNode openModuleDefinitionParam, TContext context) {
      return VisitNode (openModuleDefinitionParam, context);
    }
    public virtual TReturn VisitOperatorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOperatorExpressionNode operatorExpressionParam, TContext context) {
      return VisitNode (operatorExpressionParam, context);
    }
    public virtual TReturn VisitOperatorNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOperatorNameNode operatorNameParam, TContext context) {
      return VisitValueNameNode (operatorNameParam, context);
    }
    public virtual TReturn VisitOrExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IOrExpressionNode orExpressionParam, TContext context) {
      return VisitNode (orExpressionParam, context);
    }
    public virtual TReturn VisitParameterizedConstructorPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IParameterizedConstructorPatternNode parameterizedConstructorPatternParam, TContext context) {
      return VisitPatternNode (parameterizedConstructorPatternParam, context);
    }
    public virtual TReturn VisitParameterizedTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IParameterizedTypeReferenceNode parameterizedTypeReferenceParam, TContext context) {
      return VisitNode (parameterizedTypeReferenceParam, context);
    }
    public virtual TReturn VisitParenthesizedExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IParenthesizedExpressionNode parenthesizedExpressionParam, TContext context) {
      return VisitExpressionNode (parenthesizedExpressionParam, context);
    }
    public virtual TReturn VisitParenthesizedFieldValueExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IParenthesizedFieldValueExpressionNode parenthesizedFieldValueExpressionParam, TContext context) {
      return VisitExpressionNode (parenthesizedFieldValueExpressionParam, context);
    }
    public virtual TReturn VisitParenthesizedPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IParenthesizedPatternNode parenthesizedPatternParam, TContext context) {
      return VisitPatternNode (parenthesizedPatternParam, context);
    }
    public virtual TReturn VisitParenthesizedTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IParenthesizedTypeNode parenthesizedTypeParam, TContext context) {
      return VisitTypeExpressionNode (parenthesizedTypeParam, context);
    }
    public virtual TReturn VisitPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IPatternNode patternParam, TContext context) {
      return VisitNode (patternParam, context);
    }
    public virtual TReturn VisitPatternMatchingNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IPatternMatchingNode patternMatchingParam, TContext context) {
      return VisitNode (patternMatchingParam, context);
    }
    public virtual TReturn VisitPrefixOperatorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IPrefixOperatorExpressionNode prefixOperatorExpressionParam, TContext context) {
      return VisitNode (prefixOperatorExpressionParam, context);
    }
    public virtual TReturn VisitQualifiedIdReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IQualifiedIdReferenceNode qualifiedIdReferenceParam, TContext context) {
      return VisitValueReferenceExpressionOldNode (qualifiedIdReferenceParam, context);
    }
    public virtual TReturn VisitQualifiedIdentifierNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode qualifiedIdentifierNameParam, TContext context) {
      return VisitNode (qualifiedIdentifierNameParam, context);
    }
    public virtual TReturn VisitQualifiedValueNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedValueNameNode qualifiedValueNameParam, TContext context) {
      return VisitNode (qualifiedValueNameParam, context);
    }
    public virtual TReturn VisitQualifiedValueReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedValueReferenceNode qualifiedValueReferenceParam, TContext context) {
      return VisitValueReferenceExpressionOldNode (qualifiedValueReferenceParam, context);
    }
    public virtual TReturn VisitRangePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRangePatternNode rangePatternParam, TContext context) {
      return VisitPatternNode (rangePatternParam, context);
    }
    public virtual TReturn VisitRecordExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRecordExpressionNode recordExpressionParam, TContext context) {
      return VisitExpressionNode (recordExpressionParam, context);
    }
    public virtual TReturn VisitRecordPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRecordPatternNode recordPatternParam, TContext context) {
      return VisitPatternNode (recordPatternParam, context);
    }
    public virtual TReturn VisitRecordTypeRepresentationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRecordTypeRepresentationNode recordTypeRepresentationParam, TContext context) {
      return VisitTypeRepresentationNode (recordTypeRepresentationParam, context);
    }
    public virtual TReturn VisitSpecificationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ISpecificationNode specificationParam, TContext context) {
      return VisitNode (specificationParam, context);
    }
    public virtual TReturn VisitStringConcatenateExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IStringConcatenateExpressionNode stringConcatenateExpressionParam, TContext context) {
      return VisitNode (stringConcatenateExpressionParam, context);
    }
    public virtual TReturn VisitTryFinallyExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITryFinallyExpressionNode tryFinallyExpressionParam, TContext context) {
      return VisitExpressionNode (tryFinallyExpressionParam, context);
    }
    public virtual TReturn VisitTryWithExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITryWithExpressionNode tryWithExpressionParam, TContext context) {
      return VisitExpressionNode (tryWithExpressionParam, context);
    }
    public virtual TReturn VisitTupleExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITupleExpressionNode tupleExpressionParam, TContext context) {
      return VisitExpressionNode (tupleExpressionParam, context);
    }
    public virtual TReturn VisitTuplePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITuplePatternNode tuplePatternParam, TContext context) {
      return VisitPatternNode (tuplePatternParam, context);
    }
    public virtual TReturn VisitTupleTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITupleTypeNode tupleTypeParam, TContext context) {
      return VisitTypeExpressionNode (tupleTypeParam, context);
    }
    public virtual TReturn VisitTypeDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeDeclarationNode typeDeclarationParam, TContext context) {
      return VisitNode (typeDeclarationParam, context);
    }
    public virtual TReturn VisitTypeDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeDefinitionNode typeDefinitionParam, TContext context) {
      return VisitNode (typeDefinitionParam, context);
    }
    public virtual TReturn VisitTypeExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeExpressionNode typeExpressionParam, TContext context) {
      return VisitNode (typeExpressionParam, context);
    }
    public virtual TReturn VisitTypeInformationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeInformationNode typeInformationParam, TContext context) {
      return VisitNode (typeInformationParam, context);
    }
    public virtual TReturn VisitTypeParameterDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeParameterDeclarationNode typeParameterDeclarationParam, TContext context) {
      return VisitNode (typeParameterDeclarationParam, context);
    }
    public virtual TReturn VisitTypeParameterListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeParameterListNode typeParameterListParam, TContext context) {
      return VisitNode (typeParameterListParam, context);
    }
    public virtual TReturn VisitTypeParameterReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeParameterReferenceNode typeParameterReferenceParam, TContext context) {
      return VisitTypeExpressionNode (typeParameterReferenceParam, context);
    }
    public virtual TReturn VisitTypeRefOrConstructorDeclNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeRefOrConstructorDeclNode typeRefOrConstructorDeclParam, TContext context) {
      return VisitTypeInformationNode (typeRefOrConstructorDeclParam, context);
    }
    public virtual TReturn VisitTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeReferenceNode typeReferenceParam, TContext context) {
      return VisitNode (typeReferenceParam, context);
    }
    public virtual TReturn VisitTypeRepresentationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeRepresentationNode typeRepresentationParam, TContext context) {
      return VisitTypeInformationNode (typeRepresentationParam, context);
    }
    public virtual TReturn VisitTypeSchemeExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeSchemeExpressionNode typeSchemeExpressionParam, TContext context) {
      return VisitNode (typeSchemeExpressionParam, context);
    }
    public virtual TReturn VisitTypeTestExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeTestExpressionNode typeTestExpressionParam, TContext context) {
      return VisitExpressionNode (typeTestExpressionParam, context);
    }
    public virtual TReturn VisitTypeTestPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeTestPatternNode typeTestPatternParam, TContext context) {
      return VisitPatternNode (typeTestPatternParam, context);
    }
    public virtual TReturn VisitTypedExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypedExpressionNode typedExpressionParam, TContext context) {
      return VisitExpressionNode (typedExpressionParam, context);
    }
    public virtual TReturn VisitTypedPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypedPatternNode typedPatternParam, TContext context) {
      return VisitPatternNode (typedPatternParam, context);
    }
    public virtual TReturn VisitUnaryExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnaryExpressionNode unaryExpressionParam, TContext context) {
      return VisitOperatorExpressionNode (unaryExpressionParam, context);
    }
    public virtual TReturn VisitUnaryMinusExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnaryMinusExpressionNode unaryMinusExpressionParam, TContext context) {
      return VisitNode (unaryMinusExpressionParam, context);
    }
    public virtual TReturn VisitUnderlinePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnderlinePatternNode underlinePatternParam, TContext context) {
      return VisitPatternNode (underlinePatternParam, context);
    }
    public virtual TReturn VisitUnderlineTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IUnderlineTypeNode underlineTypeParam, TContext context) {
      return VisitTypeExpressionNode (underlineTypeParam, context);
    }
    public virtual TReturn VisitUnitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnitNode unitParam, TContext context) {
      return VisitNode (unitParam, context);
    }
    public virtual TReturn VisitUpcastExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUpcastExpressionNode upcastExpressionParam, TContext context) {
      return VisitExpressionNode (upcastExpressionParam, context);
    }
    public virtual TReturn VisitUpcastExpressionToTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUpcastExpressionToTypeNode upcastExpressionToTypeParam, TContext context) {
      return VisitExpressionNode (upcastExpressionToTypeParam, context);
    }
    public virtual TReturn VisitValueDeclarationPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueDeclarationPatternNode valueDeclarationPatternParam, TContext context) {
      return VisitPatternNode (valueDeclarationPatternParam, context);
    }
    public virtual TReturn VisitValueNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueNameNode valueNameParam, TContext context) {
      return VisitNode (valueNameParam, context);
    }
    public virtual TReturn VisitValueReferenceExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueReferenceExpressionNode valueReferenceExpressionParam, TContext context) {
      return VisitExpressionNode (valueReferenceExpressionParam, context);
    }
    public virtual TReturn VisitValueReferenceExpressionOldNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IValueReferenceExpressionOldNode valueReferenceExpressionOldParam, TContext context) {
      return VisitNode (valueReferenceExpressionOldParam, context);
    }
    public virtual TReturn VisitValueSpecificationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueSpecificationNode valueSpecificationParam, TContext context) {
      return VisitNode (valueSpecificationParam, context);
    }
    public virtual TReturn VisitWhileStatementExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IWhileStatementExpressionNode whileStatementExpressionParam, TContext context) {
      return VisitExpressionNode (whileStatementExpressionParam, context);
    }
    public virtual TReturn VisitWithRecordExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IWithRecordExpressionNode withRecordExpressionParam, TContext context) {
      return VisitExpressionNode (withRecordExpressionParam, context);
    }
    public virtual TReturn VisitWithoutParameterTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IWithoutParameterTypeReferenceNode withoutParameterTypeReferenceParam, TContext context) {
      return VisitNode (withoutParameterTypeReferenceParam, context);
    }
  }
}
