//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
using System;
using JetBrains.ReSharper.Psi.Tree;
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
using JetBrains.ReSharper.Psi.FSharp;
namespace JetBrains.ReSharper.Psi.FSharp.Impl.Tree {
  internal abstract partial class FSharpFileStub : FSharpFileNode, JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpFileNode, JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpFile {
    public const short MODULE_KEYWORD= JetBrains.ReSharper.Psi.FSharp.Impl.Tree.FSharpChildRole.LAST + 1;
    public const short MODULE_NAME= JetBrains.ReSharper.Psi.FSharp.Impl.Tree.FSharpChildRole.LAST + 2;
    public const short IMPLEMENTATION_UNIT= JetBrains.ReSharper.Psi.FSharp.Impl.Tree.FSharpChildRole.LAST + 3;
    public FSharpFileStub() : base() {
    }
    public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType NodeType {
      get { return JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType._F_SHARP_FILE; }
    }
    public override void Accept(JetBrains.ReSharper.Psi.FSharp.ElementVisitor visitor) {
      visitor.VisitFSharpFile(this);
    }
    public override TReturn Accept<TContext, TReturn>(JetBrains.ReSharper.Psi.FSharp.ElementVisitor<TContext,TReturn> visitor, TContext context) {
      return visitor.VisitFSharpFile(this, context);
    }
    public override void Accept(JetBrains.ReSharper.Psi.FSharp.TreeNodeVisitor visitor) {
      visitor.VisitFSharpFileNode(this);
    }
    public override void Accept<TContext>(JetBrains.ReSharper.Psi.FSharp.TreeNodeVisitor<TContext> visitor, TContext context) {
      visitor.VisitFSharpFileNode(this, context);
    }
    public override TReturn Accept<TContext, TReturn>(JetBrains.ReSharper.Psi.FSharp.TreeNodeVisitor<TContext, TReturn> visitor, TContext context) {
      return visitor.VisitFSharpFileNode(this, context);
    }
    private static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeDictionary<short> CHILD_ROLES = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeDictionary<short>(
      new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>[]
      {
        new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>(JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.QUALIFIED_IDENTIFIER_NAME, MODULE_NAME),
        new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>(JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.IMPLEMENTATION_UNIT, IMPLEMENTATION_UNIT),
        new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>(JetBrains.ReSharper.Psi.FSharp.Impl.Tree.TokenType.KEYWORD_MODULE, MODULE_KEYWORD),
      }
    );
    public override short GetChildRole (JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement child) {
      return CHILD_ROLES[child.NodeType];
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.IImplementationUnit ImplementationUnit {
      get { return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnit) FindChildByRole(IMPLEMENTATION_UNIT); }
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode ImplementationUnitNode {
      get { return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode) FindChildByRole(IMPLEMENTATION_UNIT); }
    }
    public virtual JetBrains.ReSharper.Psi.ITokenNode ModuleKeyword {
      get { return (JetBrains.ReSharper.Psi.ITokenNode) FindChildByRole(MODULE_KEYWORD); }
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierName ModuleName {
      get { return (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierName) FindChildByRole(MODULE_NAME); }
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode ModuleNameNode {
      get { return (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode) FindChildByRole(MODULE_NAME); }
    }
    public virtual JetBrains.ReSharper.Psi.Tree.TreeNodeCollection<JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition>  Definitions {
      get
      {
        CompositeElement current = this;  
    
        var result = JetBrains.ReSharper.Psi.Tree.TreeNodeCollection<JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition>.Empty;
        CompositeElement current0 = (CompositeElement)current.FindChildByRole (JetBrains.ReSharper.Psi.FSharp.Impl.Tree.FSharpFileStub.IMPLEMENTATION_UNIT);
        if (current0 != null) {
          result = ((CompositeElement)current0).FindListOfChildrenByRole<JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition> (JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ImplementationUnit.DEFINITION);
        }
        return result;
      }
    }
    public virtual  JetBrains.ReSharper.Psi.FSharp.IIdentifierNode IdentifierName {
      get
      {
        CompositeElement current = this;  
    
        JetBrains.ReSharper.Psi.FSharp.IIdentifierNode result = null;
        CompositeElement current0 = (CompositeElement)current.FindChildByRole (JetBrains.ReSharper.Psi.FSharp.Impl.Tree.FSharpFileStub.MODULE_NAME);
        if (current0 != null) {
          TreeElement current1 = current0.FindChildByRole (JetBrains.ReSharper.Psi.FSharp.Impl.Tree.QualifiedIdentifierNameStub.NAME);
          if (current1 != null) {
            result = (JetBrains.ReSharper.Psi.FSharp.IIdentifierNode) current1;
          }
        }
        return result;
      }
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.IIdentifierNode SetIdentifierName (JetBrains.ReSharper.Psi.FSharp.IIdentifierNode param)
    {
      CompositeElement current = this;
  
      current = (CompositeElement)current.FindChildByRole (FSharpFileStub.MODULE_NAME); // Expected type : JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode
      if (current == null)
      { // TODO create element here
        return null;
      }
      QualifiedIdentifierNameStub last = current as QualifiedIdentifierNameStub;
      if (last != null) return (JetBrains.ReSharper.Psi.FSharp.IIdentifierNode)last.SetIdentifierName ((JetBrains.ReSharper.Psi.FSharp.IIdentifierNode)param);
      return null;
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.IImplementationUnit SetImplementationUnit (JetBrains.ReSharper.Psi.FSharp.IImplementationUnit param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.TokenType.KEYWORD_MODULE)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnit)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.TokenType.KEYWORD_MODULE) {
              current = next;
            } else {
              return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnit)result;
            }
          }
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnit)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.QUALIFIED_IDENTIFIER_NAME) {
              current = next;
            } else {
              return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnit)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.IMPLEMENTATION_UNIT) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnit)result;
      }
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode SetImplementationUnitNode (JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.TokenType.KEYWORD_MODULE)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.TokenType.KEYWORD_MODULE) {
              current = next;
            } else {
              return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode)result;
            }
          }
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.QUALIFIED_IDENTIFIER_NAME) {
              current = next;
            } else {
              return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.IMPLEMENTATION_UNIT) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode)result;
      }
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierName SetModuleName (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierName param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        next = GetNextFilteredChild (current);
        if (next == null) {
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, TreeElementFactory.CreateErrorElement (string.Empty));
        } else {
          if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.TokenType.KEYWORD_MODULE) {
            if (param != null) {
              current = next;
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            return (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierName)result;
          }
        }
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.QUALIFIED_IDENTIFIER_NAME) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierName)result;
      }
    }
    public virtual JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode SetModuleNameNode (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        next = GetNextFilteredChild (current);
        if (next == null) {
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, TreeElementFactory.CreateErrorElement (string.Empty));
        } else {
          if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.TokenType.KEYWORD_MODULE) {
            if (param != null) {
              current = next;
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            return (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode)result;
          }
        }
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.Psi.FSharp.Impl.Tree.ElementType.QUALIFIED_IDENTIFIER_NAME) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode)result;
      }
    }
    /*
    public virtual JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition AddDefinitionBefore (JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition param, JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition anchor)
    {
      throw new NotImplementedException ("AddDefinitionBefore");
      using (Shell.WriteLockCookie.Create ())
      {
        TreeElement current = null, next, result = null;
        TreeElement childToAddBefore = null;
        $rule
        return (JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition)result;
      }
    }
    */
    /*
    public virtual JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition AddDefinitionAfter (JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition param, JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition anchor)
    {
      throw new NotImplementedException ("AddDefinitionAfter");
      throw new NotImplementedException ("AddDefinitionAfter");
    }
    */
    /*
    public virtual void RemoveDefinition (JetBrains.ReSharper.Psi.FSharp.Tree.IDefinition param)
    {
      throw new NotImplementedException ("RemoveDefinition");
    }
    */
    JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpFileNode JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpFile.ToTreeNode() { return this; }
    public override string ToString() {
      return "IFSharpFile";
    }
  }
}
