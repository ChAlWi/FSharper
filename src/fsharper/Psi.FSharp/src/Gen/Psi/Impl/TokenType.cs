//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.Psi.FSharp.Impl.Tree {
  public abstract class TokenType {
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType CHARACTER_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.CHARACTER_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType FLOAT32_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.FLOAT32_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType FLOAT64_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.FLOAT64_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType IDENTIFIER = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.IDENTIFIER;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType INT16_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.INT16_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType INT32_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.INT32_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType INT64_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.INT64_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType INT8_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.INT8_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType INT_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.INT_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_AND = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_AND;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_ANDAND_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_ANDAND_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_AND_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_AND_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_AS = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_AS;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_ASR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_ASR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_ASSERT = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_ASSERT;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_ASTERISK_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_ASTERISK_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_BEGIN = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_BEGIN;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_COLONCOLON_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_COLONCOLON_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_COLONEQ_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_COLONEQ_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_COLONGT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_COLONGT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_COLONQUESTGT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_COLONQUESTGT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_COLONQUEST_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_COLONQUEST_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_COLON_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_COLON_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_COMMA_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_COMMA_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_DO = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_DO;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_DOLLAR_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_DOLLAR_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_DONE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_DONE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_DOTDOT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_DOTDOT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_DOT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_DOT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_DOWNCAST = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_DOWNCAST;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_DOWNTO = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_DOWNTO;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_ELSE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_ELSE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_END = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_END;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_EQ_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_EQ_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_EXCEPTION = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_EXCEPTION;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_FALSE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_FALSE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_FINALLY = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_FINALLY;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_FOR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_FOR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_FUN = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_FUN;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_FUNCTION = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_FUNCTION;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_GTRBRACKET_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_GTRBRACKET_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_GT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_GT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_IF = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_IF;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_IN = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_IN;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_INLINE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_INLINE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LAND = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LAND;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LARROW_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LARROW_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LAZY = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LAZY;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LBRACE_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LBRACE_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LBRACKETLT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LBRACKETLT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LBRACKETOR_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LBRACKETOR_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LBRACKET_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LBRACKET_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LET = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LET;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LOR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LOR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LPARENTH_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LPARENTH_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LSL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LSL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LSR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LSR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_LXOR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_LXOR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_MATCH = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_MATCH;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_MINUSDOT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_MINUSDOT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_MINUS_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_MINUS_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_MOD = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_MOD;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_MODULE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_MODULE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_MUTABLE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_MUTABLE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_NEW = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_NEW;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_NOTEQ_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_NOTEQ_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_NULL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_NULL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_OF = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_OF;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_OPEN = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_OPEN;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_OR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_OR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_OROR_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_OROR_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_ORRBRACKET_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_ORRBRACKET_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_OR_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_OR_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_PLUS_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_PLUS_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_QUOT_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_QUOT_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_RARROW_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_RARROW_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_RBRACE_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_RBRACE_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_RBRACKET_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_RBRACKET_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_REC = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_REC;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_RPARENTH_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_RPARENTH_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_SEMICOLONSEMICOLON_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_SEMICOLONSEMICOLON_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_SEMICOLON_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_SEMICOLON_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_THEN = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_THEN;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_TO = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_TO;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_TRUE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_TRUE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_TRY = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_TRY;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_TYPE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_TYPE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_UNDERLINE_OP = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_UNDERLINE_OP;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_UPCAST = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_UPCAST;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_VAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_VAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_WHEN = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_WHEN;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_WHILE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_WHILE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType KEYWORD_WITH = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.KEYWORD_WITH;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType NATIVEINT_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.NATIVEINT_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_AND = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_AND;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_ASTERISK = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_ASTERISK;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_ASTERISKASTERISK = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_ASTERISKASTERISK;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_AT = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_AT;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_DIV = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_DIV;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_DOLLAR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_DOLLAR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_EQ = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_EQ;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_EXCL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_EXCL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_GT = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_GT;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_LT = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_LT;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_MINUS = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_MINUS;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_OR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_OR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_PERC = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_PERC;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_PLUS = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_PLUS;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_QUEST = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_QUEST;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_TILDE = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_TILDE;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType OPERATOR_XOR = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.OPERATOR_XOR;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType STRING_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.STRING_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType UINT16_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.UINT16_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType UINT32_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.UINT32_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType UINT64_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.UINT64_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType UINT8_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.UINT8_LITERAL;
    public static readonly JetBrains.ReSharper.Psi.Parsing.TokenNodeType UNATIVEINT_LITERAL = JetBrains.ReSharper.Psi.FSharp.Impl.Lexing.FSharpTokenType.UNATIVEINT_LITERAL;
    //  public const short FIRST_TYPE = null + 1;
    //  public const short LAST_TYPE = $lasttype;
  }
}
