//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
using System.Collections;
using JetBrains.ReSharper.Psi.Tree;
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
using JetBrains.ReSharper.Psi.FSharp.Impl.Tree;
namespace JetBrains.ReSharper.Psi.FSharp {
  public static partial class ParameterizedTypeReferenceNavigator {
    [JetBrains.Annotations.Pure]
    [JetBrains.Annotations.CanBeNull]
    [JetBrains.Annotations.ContractAnnotation("null <= null")]
    public static JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpTreeNode GetByTypeReference (JetBrains.ReSharper.Psi.FSharp.Tree.ITypeReference param) {
      return 
      (JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpTreeNode) OneParameterTypeReferenceNavigator.GetByTypeReference (param) ??
      (JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpTreeNode) MultiParameterTypeReferenceNavigator.GetByTypeReference (param) ??
      (JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpTreeNode) WithoutParameterTypeReferenceNavigator.GetByTypeReference (param) ??
      (JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpTreeNode) null;
    }
  }
}
