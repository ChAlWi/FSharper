//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.Psi.FSharp {
  public abstract partial class TreeNodeVisitor<TContext> {
    public virtual void VisitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.Tree.ITreeNode node, TContext context)
    {
    }
    public virtual void VisitFSharpFileNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFSharpFileNode FSharpFileParam, TContext context) {
      VisitNode (FSharpFileParam, context);
    }
    public virtual void VisitAlgebraicTypeRepresentationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAlgebraicTypeRepresentationNode algebraicTypeRepresentationParam, TContext context) {
      VisitTypeRepresentationNode (algebraicTypeRepresentationParam, context);
    }
    public virtual void VisitAndExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAndExpressionNode andExpressionParam, TContext context) {
      VisitNode (andExpressionParam, context);
    }
    public virtual void VisitApplicationExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IApplicationExpressionNode applicationExpressionParam, TContext context) {
      VisitExpressionNode (applicationExpressionParam, context);
    }
    public virtual void VisitArrayExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IArrayExpressionNode arrayExpressionParam, TContext context) {
      VisitExpressionNode (arrayExpressionParam, context);
    }
    public virtual void VisitArrayPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IArrayPatternNode arrayPatternParam, TContext context) {
      VisitPatternNode (arrayPatternParam, context);
    }
    public virtual void VisitArrayTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IArrayTypeNode arrayTypeParam, TContext context) {
      VisitTypeExpressionNode (arrayTypeParam, context);
    }
    public virtual void VisitAsValuePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IAsValuePatternNode asValuePatternParam, TContext context) {
      VisitPatternNode (asValuePatternParam, context);
    }
    public virtual void VisitAssertExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAssertExpressionNode assertExpressionParam, TContext context) {
      VisitExpressionNode (assertExpressionParam, context);
    }
    public virtual void VisitAssignExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAssignExpressionNode assignExpressionParam, TContext context) {
      VisitNode (assignExpressionParam, context);
    }
    public virtual void VisitAssignFieldExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAssignFieldExpressionNode assignFieldExpressionParam, TContext context) {
      VisitNode (assignFieldExpressionParam, context);
    }
    public virtual void VisitAttributeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAttributeNode attributeParam, TContext context) {
      VisitNode (attributeParam, context);
    }
    public virtual void VisitAttributeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IAttributeReferenceNode attributeReferenceParam, TContext context) {
      VisitNode (attributeReferenceParam, context);
    }
    public virtual void VisitBinaryAddExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryAddExpressionNode binaryAddExpressionParam, TContext context) {
      VisitNode (binaryAddExpressionParam, context);
    }
    public virtual void VisitBinaryExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryExpressionNode binaryExpressionParam, TContext context) {
      VisitOperatorExpressionNode (binaryExpressionParam, context);
    }
    public virtual void VisitBinaryMultExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryMultExpressionNode binaryMultExpressionParam, TContext context) {
      VisitNode (binaryMultExpressionParam, context);
    }
    public virtual void VisitBinaryPowerExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBinaryPowerExpressionNode binaryPowerExpressionParam, TContext context) {
      VisitNode (binaryPowerExpressionParam, context);
    }
    public virtual void VisitBindingNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IBindingNode bindingParam, TContext context) {
      VisitBindingSchemeNode (bindingParam, context);
    }
    public virtual void VisitBindingPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBindingPatternNode bindingPatternParam, TContext context) {
      VisitBindingSourceNode (bindingPatternParam, context);
    }
    public virtual void VisitBindingSchemeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBindingSchemeNode bindingSchemeParam, TContext context) {
      VisitNode (bindingSchemeParam, context);
    }
    public virtual void VisitBindingSourceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IBindingSourceNode bindingSourceParam, TContext context) {
      VisitNode (bindingSourceParam, context);
    }
    public virtual void VisitBindingValueNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IBindingValueNode bindingValueParam, TContext context) {
      VisitBindingValueSchemeNode (bindingValueParam, context);
    }
    public virtual void VisitBindingValueSchemeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBindingValueSchemeNode bindingValueSchemeParam, TContext context) {
      VisitBindingSourceNode (bindingValueSchemeParam, context);
    }
    public virtual void VisitBracketedExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBracketedExpressionNode bracketedExpressionParam, TContext context) {
      VisitExpressionNode (bracketedExpressionParam, context);
    }
    public virtual void VisitBracketedFieldValueExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBracketedFieldValueExpressionNode bracketedFieldValueExpressionParam, TContext context) {
      VisitExpressionNode (bracketedFieldValueExpressionParam, context);
    }
    public virtual void VisitBracketedPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IBracketedPatternNode bracketedPatternParam, TContext context) {
      VisitPatternNode (bracketedPatternParam, context);
    }
    public virtual void VisitComparisonExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IComparisonExpressionNode comparisonExpressionParam, TContext context) {
      VisitNode (comparisonExpressionParam, context);
    }
    public virtual void VisitConstantExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstantExpressionNode constantExpressionParam, TContext context) {
      VisitExpressionNode (constantExpressionParam, context);
    }
    public virtual void VisitConstantPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstantPatternNode constantPatternParam, TContext context) {
      VisitPatternNode (constantPatternParam, context);
    }
    public virtual void VisitConstructorDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstructorDeclarationNode constructorDeclarationParam, TContext context) {
      VisitNode (constructorDeclarationParam, context);
    }
    public virtual void VisitConstructorReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IConstructorReferenceNode constructorReferenceParam, TContext context) {
      VisitPatternNode (constructorReferenceParam, context);
    }
    public virtual void VisitCreationExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ICreationExpressionNode creationExpressionParam, TContext context) {
      VisitExpressionNode (creationExpressionParam, context);
    }
    public virtual void VisitCreationWithOverridingMethodsExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ICreationWithOverridingMethodsExpressionNode creationWithOverridingMethodsExpressionParam, TContext context) {
      VisitExpressionNode (creationWithOverridingMethodsExpressionParam, context);
    }
    public virtual void VisitDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IDefinitionNode definitionParam, TContext context) {
      VisitNode (definitionParam, context);
    }
    public virtual void VisitDisjunctionPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDisjunctionPatternNode disjunctionPatternParam, TContext context) {
      VisitPatternNode (disjunctionPatternParam, context);
    }
    public virtual void VisitDoExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDoExpressionNode doExpressionParam, TContext context) {
      VisitBindingSchemeNode (doExpressionParam, context);
    }
    public virtual void VisitDoExpressionDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IDoExpressionDefinitionNode doExpressionDefinitionParam, TContext context) {
      VisitDefinitionNode (doExpressionDefinitionParam, context);
    }
    public virtual void VisitDowncastExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDowncastExpressionNode downcastExpressionParam, TContext context) {
      VisitExpressionNode (downcastExpressionParam, context);
    }
    public virtual void VisitDowncastExpressionToTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IDowncastExpressionToTypeNode downcastExpressionToTypeParam, TContext context) {
      VisitExpressionNode (downcastExpressionToTypeParam, context);
    }
    public virtual void VisitEmptyArrayNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IEmptyArrayNode emptyArrayParam, TContext context) {
      VisitNode (emptyArrayParam, context);
    }
    public virtual void VisitEmptyListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IEmptyListNode emptyListParam, TContext context) {
      VisitNode (emptyListParam, context);
    }
    public virtual void VisitExceptionAliasNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionAliasNode exceptionAliasParam, TContext context) {
      VisitExceptionDefinitionNode (exceptionAliasParam, context);
    }
    public virtual void VisitExceptionDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionDeclarationNode exceptionDeclarationParam, TContext context) {
      VisitExceptionDefinitionNode (exceptionDeclarationParam, context);
    }
    public virtual void VisitExceptionDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionDefinitionNode exceptionDefinitionParam, TContext context) {
      VisitNode (exceptionDefinitionParam, context);
    }
    public virtual void VisitExceptionReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExceptionReferenceNode exceptionReferenceParam, TContext context) {
      VisitNode (exceptionReferenceParam, context);
    }
    public virtual void VisitExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IExpressionNode expressionParam, TContext context) {
      VisitNode (expressionParam, context);
    }
    public virtual void VisitExpressionBlockNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IExpressionBlockNode expressionBlockParam, TContext context) {
      VisitExpressionNode (expressionBlockParam, context);
    }
    public virtual void VisitExpressionSequenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IExpressionSequenceNode expressionSequenceParam, TContext context) {
      VisitExpressionNode (expressionSequenceParam, context);
    }
    public virtual void VisitFieldAssignmentNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldAssignmentNode fieldAssignmentParam, TContext context) {
      VisitNode (fieldAssignmentParam, context);
    }
    public virtual void VisitFieldAssignmentListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldAssignmentListNode fieldAssignmentListParam, TContext context) {
      VisitNode (fieldAssignmentListParam, context);
    }
    public virtual void VisitFieldDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFieldDeclarationNode fieldDeclarationParam, TContext context) {
      VisitNode (fieldDeclarationParam, context);
    }
    public virtual void VisitFieldDeclarationListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldDeclarationListNode fieldDeclarationListParam, TContext context) {
      VisitNode (fieldDeclarationListParam, context);
    }
    public virtual void VisitFieldPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldPatternNode fieldPatternParam, TContext context) {
      VisitNode (fieldPatternParam, context);
    }
    public virtual void VisitFieldPatternListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFieldPatternListNode fieldPatternListParam, TContext context) {
      VisitNode (fieldPatternListParam, context);
    }
    public virtual void VisitFieldReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFieldReferenceNode fieldReferenceParam, TContext context) {
      VisitNode (fieldReferenceParam, context);
    }
    public virtual void VisitForAllTypeExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IForAllTypeExpressionNode forAllTypeExpressionParam, TContext context) {
      VisitTypeSchemeExpressionNode (forAllTypeExpressionParam, context);
    }
    public virtual void VisitForStatementExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IForStatementExpressionNode forStatementExpressionParam, TContext context) {
      VisitExpressionNode (forStatementExpressionParam, context);
    }
    public virtual void VisitFunExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFunExpressionNode funExpressionParam, TContext context) {
      VisitExpressionNode (funExpressionParam, context);
    }
    public virtual void VisitFunctionExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IFunctionExpressionNode functionExpressionParam, TContext context) {
      VisitExpressionNode (functionExpressionParam, context);
    }
    public virtual void VisitFunctionTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IFunctionTypeNode functionTypeParam, TContext context) {
      VisitTypeExpressionNode (functionTypeParam, context);
    }
    public virtual void VisitIdReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IIdReferenceNode idReferenceParam, TContext context) {
      VisitNode (idReferenceParam, context);
    }
    public virtual void VisitIfStatementExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IIfStatementExpressionNode ifStatementExpressionParam, TContext context) {
      VisitExpressionNode (ifStatementExpressionParam, context);
    }
    public virtual void VisitImplementationUnitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IImplementationUnitNode implementationUnitParam, TContext context) {
      VisitNode (implementationUnitParam, context);
    }
    public virtual void VisitInfixOperatorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IInfixOperatorExpressionNode infixOperatorExpressionParam, TContext context) {
      VisitNode (infixOperatorExpressionParam, context);
    }
    public virtual void VisitInterfaceUnitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IInterfaceUnitNode interfaceUnitParam, TContext context) {
      VisitNode (interfaceUnitParam, context);
    }
    public virtual void VisitLazyExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ILazyExpressionNode lazyExpressionParam, TContext context) {
      VisitExpressionNode (lazyExpressionParam, context);
    }
    public virtual void VisitLazyTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ILazyTypeNode lazyTypeParam, TContext context) {
      VisitTypeExpressionNode (lazyTypeParam, context);
    }
    public virtual void VisitLetDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ILetDefinitionNode letDefinitionParam, TContext context) {
      VisitDefinitionNode (letDefinitionParam, context);
    }
    public virtual void VisitListConcatenateExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IListConcatenateExpressionNode listConcatenateExpressionParam, TContext context) {
      VisitNode (listConcatenateExpressionParam, context);
    }
    public virtual void VisitListConstructorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IListConstructorExpressionNode listConstructorExpressionParam, TContext context) {
      VisitNode (listConstructorExpressionParam, context);
    }
    public virtual void VisitListConstructorPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IListConstructorPatternNode listConstructorPatternParam, TContext context) {
      VisitPatternNode (listConstructorPatternParam, context);
    }
    public virtual void VisitLocalDeclarationsInExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ILocalDeclarationsInExpressionNode localDeclarationsInExpressionParam, TContext context) {
      VisitExpressionNode (localDeclarationsInExpressionParam, context);
    }
    public virtual void VisitMatchClauseNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMatchClauseNode matchClauseParam, TContext context) {
      VisitNode (matchClauseParam, context);
    }
    public virtual void VisitMatchExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IMatchExpressionNode matchExpressionParam, TContext context) {
      VisitExpressionNode (matchExpressionParam, context);
    }
    public virtual void VisitMemberAccessExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMemberAccessExpressionNode memberAccessExpressionParam, TContext context) {
      VisitExpressionNode (memberAccessExpressionParam, context);
    }
    public virtual void VisitModuleReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IModuleReferenceNode moduleReferenceParam, TContext context) {
      VisitNode (moduleReferenceParam, context);
    }
    public virtual void VisitModuleReferenceListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IModuleReferenceListNode moduleReferenceListParam, TContext context) {
      VisitNode (moduleReferenceListParam, context);
    }
    public virtual void VisitModuleReferenceOldNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IModuleReferenceOldNode moduleReferenceOldParam, TContext context) {
      VisitNode (moduleReferenceOldParam, context);
    }
    public virtual void VisitMultiParameterTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMultiParameterTypeReferenceNode multiParameterTypeReferenceParam, TContext context) {
      VisitNode (multiParameterTypeReferenceParam, context);
    }
    public virtual void VisitMultipleMatchingNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMultipleMatchingNode multipleMatchingParam, TContext context) {
      VisitNode (multipleMatchingParam, context);
    }
    public virtual void VisitMutableBindingValueNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IMutableBindingValueNode mutableBindingValueParam, TContext context) {
      VisitBindingValueSchemeNode (mutableBindingValueParam, context);
    }
    public virtual void VisitOneParameterTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOneParameterTypeReferenceNode oneParameterTypeReferenceParam, TContext context) {
      VisitNode (oneParameterTypeReferenceParam, context);
    }
    public virtual void VisitOpenModuleDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOpenModuleDefinitionNode openModuleDefinitionParam, TContext context) {
      VisitNode (openModuleDefinitionParam, context);
    }
    public virtual void VisitOperatorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOperatorExpressionNode operatorExpressionParam, TContext context) {
      VisitNode (operatorExpressionParam, context);
    }
    public virtual void VisitOperatorNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IOperatorNameNode operatorNameParam, TContext context) {
      VisitValueNameNode (operatorNameParam, context);
    }
    public virtual void VisitOrExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IOrExpressionNode orExpressionParam, TContext context) {
      VisitNode (orExpressionParam, context);
    }
    public virtual void VisitParameterizedConstructorPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IParameterizedConstructorPatternNode parameterizedConstructorPatternParam, TContext context) {
      VisitPatternNode (parameterizedConstructorPatternParam, context);
    }
    public virtual void VisitParameterizedTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IParameterizedTypeReferenceNode parameterizedTypeReferenceParam, TContext context) {
      VisitNode (parameterizedTypeReferenceParam, context);
    }
    public virtual void VisitParenthesizedExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IParenthesizedExpressionNode parenthesizedExpressionParam, TContext context) {
      VisitExpressionNode (parenthesizedExpressionParam, context);
    }
    public virtual void VisitParenthesizedFieldValueExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IParenthesizedFieldValueExpressionNode parenthesizedFieldValueExpressionParam, TContext context) {
      VisitExpressionNode (parenthesizedFieldValueExpressionParam, context);
    }
    public virtual void VisitParenthesizedPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IParenthesizedPatternNode parenthesizedPatternParam, TContext context) {
      VisitPatternNode (parenthesizedPatternParam, context);
    }
    public virtual void VisitParenthesizedTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IParenthesizedTypeNode parenthesizedTypeParam, TContext context) {
      VisitTypeExpressionNode (parenthesizedTypeParam, context);
    }
    public virtual void VisitPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IPatternNode patternParam, TContext context) {
      VisitNode (patternParam, context);
    }
    public virtual void VisitPatternMatchingNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IPatternMatchingNode patternMatchingParam, TContext context) {
      VisitNode (patternMatchingParam, context);
    }
    public virtual void VisitPrefixOperatorExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IPrefixOperatorExpressionNode prefixOperatorExpressionParam, TContext context) {
      VisitNode (prefixOperatorExpressionParam, context);
    }
    public virtual void VisitQualifiedIdReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IQualifiedIdReferenceNode qualifiedIdReferenceParam, TContext context) {
      VisitValueReferenceExpressionOldNode (qualifiedIdReferenceParam, context);
    }
    public virtual void VisitQualifiedIdentifierNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedIdentifierNameNode qualifiedIdentifierNameParam, TContext context) {
      VisitNode (qualifiedIdentifierNameParam, context);
    }
    public virtual void VisitQualifiedValueNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedValueNameNode qualifiedValueNameParam, TContext context) {
      VisitNode (qualifiedValueNameParam, context);
    }
    public virtual void VisitQualifiedValueReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IQualifiedValueReferenceNode qualifiedValueReferenceParam, TContext context) {
      VisitValueReferenceExpressionOldNode (qualifiedValueReferenceParam, context);
    }
    public virtual void VisitRangePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRangePatternNode rangePatternParam, TContext context) {
      VisitPatternNode (rangePatternParam, context);
    }
    public virtual void VisitRecordExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRecordExpressionNode recordExpressionParam, TContext context) {
      VisitExpressionNode (recordExpressionParam, context);
    }
    public virtual void VisitRecordPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRecordPatternNode recordPatternParam, TContext context) {
      VisitPatternNode (recordPatternParam, context);
    }
    public virtual void VisitRecordTypeRepresentationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IRecordTypeRepresentationNode recordTypeRepresentationParam, TContext context) {
      VisitTypeRepresentationNode (recordTypeRepresentationParam, context);
    }
    public virtual void VisitSpecificationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ISpecificationNode specificationParam, TContext context) {
      VisitNode (specificationParam, context);
    }
    public virtual void VisitStringConcatenateExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IStringConcatenateExpressionNode stringConcatenateExpressionParam, TContext context) {
      VisitNode (stringConcatenateExpressionParam, context);
    }
    public virtual void VisitTryFinallyExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITryFinallyExpressionNode tryFinallyExpressionParam, TContext context) {
      VisitExpressionNode (tryFinallyExpressionParam, context);
    }
    public virtual void VisitTryWithExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITryWithExpressionNode tryWithExpressionParam, TContext context) {
      VisitExpressionNode (tryWithExpressionParam, context);
    }
    public virtual void VisitTupleExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITupleExpressionNode tupleExpressionParam, TContext context) {
      VisitExpressionNode (tupleExpressionParam, context);
    }
    public virtual void VisitTuplePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITuplePatternNode tuplePatternParam, TContext context) {
      VisitPatternNode (tuplePatternParam, context);
    }
    public virtual void VisitTupleTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITupleTypeNode tupleTypeParam, TContext context) {
      VisitTypeExpressionNode (tupleTypeParam, context);
    }
    public virtual void VisitTypeDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeDeclarationNode typeDeclarationParam, TContext context) {
      VisitNode (typeDeclarationParam, context);
    }
    public virtual void VisitTypeDefinitionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeDefinitionNode typeDefinitionParam, TContext context) {
      VisitNode (typeDefinitionParam, context);
    }
    public virtual void VisitTypeExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeExpressionNode typeExpressionParam, TContext context) {
      VisitNode (typeExpressionParam, context);
    }
    public virtual void VisitTypeInformationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeInformationNode typeInformationParam, TContext context) {
      VisitNode (typeInformationParam, context);
    }
    public virtual void VisitTypeParameterDeclarationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeParameterDeclarationNode typeParameterDeclarationParam, TContext context) {
      VisitNode (typeParameterDeclarationParam, context);
    }
    public virtual void VisitTypeParameterListNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeParameterListNode typeParameterListParam, TContext context) {
      VisitNode (typeParameterListParam, context);
    }
    public virtual void VisitTypeParameterReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeParameterReferenceNode typeParameterReferenceParam, TContext context) {
      VisitTypeExpressionNode (typeParameterReferenceParam, context);
    }
    public virtual void VisitTypeRefOrConstructorDeclNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeRefOrConstructorDeclNode typeRefOrConstructorDeclParam, TContext context) {
      VisitTypeInformationNode (typeRefOrConstructorDeclParam, context);
    }
    public virtual void VisitTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.ITypeReferenceNode typeReferenceParam, TContext context) {
      VisitNode (typeReferenceParam, context);
    }
    public virtual void VisitTypeRepresentationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeRepresentationNode typeRepresentationParam, TContext context) {
      VisitTypeInformationNode (typeRepresentationParam, context);
    }
    public virtual void VisitTypeSchemeExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeSchemeExpressionNode typeSchemeExpressionParam, TContext context) {
      VisitNode (typeSchemeExpressionParam, context);
    }
    public virtual void VisitTypeTestExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeTestExpressionNode typeTestExpressionParam, TContext context) {
      VisitExpressionNode (typeTestExpressionParam, context);
    }
    public virtual void VisitTypeTestPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypeTestPatternNode typeTestPatternParam, TContext context) {
      VisitPatternNode (typeTestPatternParam, context);
    }
    public virtual void VisitTypedExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypedExpressionNode typedExpressionParam, TContext context) {
      VisitExpressionNode (typedExpressionParam, context);
    }
    public virtual void VisitTypedPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.ITypedPatternNode typedPatternParam, TContext context) {
      VisitPatternNode (typedPatternParam, context);
    }
    public virtual void VisitUnaryExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnaryExpressionNode unaryExpressionParam, TContext context) {
      VisitOperatorExpressionNode (unaryExpressionParam, context);
    }
    public virtual void VisitUnaryMinusExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnaryMinusExpressionNode unaryMinusExpressionParam, TContext context) {
      VisitNode (unaryMinusExpressionParam, context);
    }
    public virtual void VisitUnderlinePatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnderlinePatternNode underlinePatternParam, TContext context) {
      VisitPatternNode (underlinePatternParam, context);
    }
    public virtual void VisitUnderlineTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IUnderlineTypeNode underlineTypeParam, TContext context) {
      VisitTypeExpressionNode (underlineTypeParam, context);
    }
    public virtual void VisitUnitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUnitNode unitParam, TContext context) {
      VisitNode (unitParam, context);
    }
    public virtual void VisitUpcastExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUpcastExpressionNode upcastExpressionParam, TContext context) {
      VisitExpressionNode (upcastExpressionParam, context);
    }
    public virtual void VisitUpcastExpressionToTypeNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IUpcastExpressionToTypeNode upcastExpressionToTypeParam, TContext context) {
      VisitExpressionNode (upcastExpressionToTypeParam, context);
    }
    public virtual void VisitValueDeclarationPatternNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueDeclarationPatternNode valueDeclarationPatternParam, TContext context) {
      VisitPatternNode (valueDeclarationPatternParam, context);
    }
    public virtual void VisitValueNameNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueNameNode valueNameParam, TContext context) {
      VisitNode (valueNameParam, context);
    }
    public virtual void VisitValueReferenceExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueReferenceExpressionNode valueReferenceExpressionParam, TContext context) {
      VisitExpressionNode (valueReferenceExpressionParam, context);
    }
    public virtual void VisitValueReferenceExpressionOldNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IValueReferenceExpressionOldNode valueReferenceExpressionOldParam, TContext context) {
      VisitNode (valueReferenceExpressionOldParam, context);
    }
    public virtual void VisitValueSpecificationNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IValueSpecificationNode valueSpecificationParam, TContext context) {
      VisitNode (valueSpecificationParam, context);
    }
    public virtual void VisitWhileStatementExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IWhileStatementExpressionNode whileStatementExpressionParam, TContext context) {
      VisitExpressionNode (whileStatementExpressionParam, context);
    }
    public virtual void VisitWithRecordExpressionNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.IWithRecordExpressionNode withRecordExpressionParam, TContext context) {
      VisitExpressionNode (withRecordExpressionParam, context);
    }
    public virtual void VisitWithoutParameterTypeReferenceNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.FSharp.Tree.IWithoutParameterTypeReferenceNode withoutParameterTypeReferenceParam, TContext context) {
      VisitNode (withoutParameterTypeReferenceParam, context);
    }
  }
}
